/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: XENIUMRANGER_IMPORT_SEGMENTATION {
        publishDir = [
            path: "${params.outdir}/xeniumranger/import_segementation",
            mode: params.publish_dir_mode
        ]
    }

    withName: FICTURE_PREPROCESS {
        publishDir = [
            path: "${params.outdir}/ficture/preprocess",
            mode: params.publish_dir_mode
        ]
    }

    withName: BAYSOR_RUN {
        publishDir = [
            path: { "${params.outdir}/baysor/run" },
            mode: params.publish_dir_mode,
        ]
        version = "0.7.1"
        baysor_xenium_config = 
        """
        [data]
        x = \\"x_location\\"
        y = \\"y_location\\"
        z = \\"z_location\\"
        gene = \\"feature_name\\"
        min_molecules_per_gene = 10
        exclude_genes = \\"NegControl*,BLANK_*,antisense_*\\"
        min_molecules_per_cell = 50

        [segmentation]
        unassigned_prior_label = \\"UNASSIGNED\\"
        prior_segmentation_confidence = 0.5

        [plotting]
        min_pixels_per_cell = 10
        """
    }

    withName: BAYSOR_SEGFREE {
        publishDir = [
            path: { "${params.outdir}/baysor/segfree" },
            mode: params.publish_dir_mode,
        ]
        version = "0.7.1"
        baysor_xenium_config =
        """
        [data]
        x = \\"x_location\\"
        y = \\"y_location\\"
        z = \\"z_location\\"
        gene = \\"feature_name\\"
        min_molecules_per_cell = 50

        [plotting]
        min_pixels_per_cell = 10
        """
    }

    withName: BAYSOR_PREVIEW {
        publishDir = [
            path: { "${params.outdir}/baysor/preview" },
            mode: params.publish_dir_mode,
        ]
        version = "0.7.1"
        baysor_xenium_config =
        """
        [data]
        x = \\"x_location\\"
        y = \\"y_location\\"
        z = \\"z_location\\"
        gene = \\"feature_name\\"
        min_molecules_per_cell = 50

        [plotting]
        min_pixels_per_cell = 10
        """
    }

    // TODO cli_dir ENV variable set inside the container
    withName: SEGGER_CREATE_DATASET {
        publishDir = [
            path: { "${params.outdir}/segger/create_dataset" },
            mode: params.publish_dir_mode,
        ]
        cli_dir = "/workspace/segger_dev/src/segger/cli"
        sample_type = "xenium"
        version = "0.1.0"
        tile_width = "120"
        tile_height = "120"
    }

    // TODO cli_dir ENV variable set inside the container
    withName: SEGGER_TRAIN {
        publishDir = [
            path: { "${params.outdir}/segger/train" },
            mode: params.publish_dir_mode,
        ]
        cli_dir = "/workspace/segger_dev/src/segger/cli"
        sample_type = "xenium"
        version = "0.1.0"
    }

    // TODO cli_dir ENV variable set inside the container
    withName: SEGGER_PREDICT {
        publishDir = [
            path: { "${params.outdir}/segger/predict" },
            mode: params.publish_dir_mode,
        ]
        cli_dir = "/workspace/segger_dev/src/segger/cli"
        sample_type = "xenium"
        version = "0.1.0"
    }

    withName: PARQUET_TO_CSV {
        publishDir = [
            path: { "${params.outdir}/spatialconverter/parquet_to_csv" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: SPATIALDATA_WRITE {
        publishDir = [
            path: { "${params.outdir}/spatialdata/write" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: SPATIALDATA_MERGE {
        publishDir = [
            path: { "${params.outdir}/spatialdata/merge" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: SPATIALDATA_META {
        publishDir = [
            path: { "${params.outdir}/spatialdata/meta" },
            mode: params.publish_dir_mode,
        ]
    }

}
