/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: XENIUMRANGER_IMPORT_SEGMENTATION {
        publishDir = [
            path: "${params.outdir}/xeniumranger/import_segementation",
            mode: params.publish_dir_mode
        ]
    }

    withName: FICTURE_PREPROCESS {
        publishDir = [
            path: "${params.outdir}/ficture/preprocess",
            mode: params.publish_dir_mode
        ]
    }

    withName: BAYSOR_RUN {
        publishDir = [
            path: { "${params.outdir}/baysor/run" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: BAYSOR_SEGFREE {
        publishDir = [
            path: { "${params.outdir}/baysor/segfree" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: BAYSOR_CREATE_DATASET {
        publishDir = [
            path: { "${params.outdir}/baysor/create_dataset" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: BAYSOR_PREVIEW {
        publishDir = [
            path: { "${params.outdir}/baysor/preview" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: SEGGER_CREATE_DATASET {
        publishDir = [
            path: { "${params.outdir}/segger/create_dataset" },
            mode: params.publish_dir_mode,
        ]
        tile_width = "120"
        tile_height = "120"
    }

    withName: SEGGER_TRAIN {
        publishDir = [
            path: { "${params.outdir}/segger/train" },
            mode: params.publish_dir_mode,
        ]
        batch_size = 4                             // larger batch size can speed up training, but requires more memory
        devices = 4                                // Use multiple GPUs by increasing the devices parameter to further accelerate training
        max_epochs = 200                           // increasing #epochs can improve model performance with more learning cycles, but extends training time
        ext.args = { "--init_emb 8 --hidden_channels 32 --num_tx_tokens 500 --out_channels 8 --heads 2 --num_mid_layers 2 --strategy auto --precision 16-mixed" }
    }

    withName: SEGGER_PREDICT {
        publishDir = [
            path: { "${params.outdir}/segger/predict" },
            mode: params.publish_dir_mode,
        ]
        batch_size = 1                            // larger batch size can speed up training, but requires more memory
        cc_analysis = "false"                     // to control connected component analysis
    }

    withName: PARQUET_TO_CSV {
        publishDir = [
            path: { "${params.outdir}/spatialconverter/parquet_to_csv" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: SPATIALDATA_WRITE {
        publishDir = [
            path: { "${params.outdir}/spatialdata/write" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: SPATIALDATA_MERGE {
        publishDir = [
            path: { "${params.outdir}/spatialdata/merge" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: SPATIALDATA_META {
        publishDir = [
            path: { "${params.outdir}/spatialdata/meta" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: CELLPOSE {
        publishDir = [
            path: { "${params.outdir}/cellpose" },
            mode: params.publish_dir_mode,
        ]
        ext.args = { "--pretrained_model nuclei --diameter 9 --channel_axis 0 --save_flows" }
    }

}
