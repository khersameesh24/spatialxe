nextflow_process {

    name "Test Process RESOLIFT"
    script "../main.nf"
    process "RESOLIFT"

    tag "modules"
    tag "modules_local"
    tag "resolift"
    tag "segmentation"
    tag "cell_segmentation"
    tag "unzip"
    config "./nextflow.config"

    setup {

            run("UNZIP") {
                script "modules/nf-core/unzip/main.nf"
                process {
                    """
                    input[0] = [[id: "test_run"], file('https://raw.githubusercontent.com/nf-core/test-datasets/spatialxe/Xenium_Prime_Mouse_Ileum_tiny_outs.zip', checkIfExists: true)]
                    """
                }
            }
    }

    test("resolift main") {

        when {
            process {
                """
                input[0] = Channel.of(
                            [id: "test_run"]).combine(UNZIP.out.unzipped_archive.map { it[1] } + "/morphology_focus/morphology_focus_0000.ome.tif")
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() },
            )
        }

    }

    test("resolift stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = Channel.of(
                            [id: "test_run"]).combine(UNZIP.out.unzipped_archive.map { it[1] } + "/morphology_focus/morphology_focus_0000.ome.tif")
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
