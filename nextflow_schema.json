{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/spatialxe/master/nextflow_schema.json",
    "title": "nf-core/spatialxe pipeline parameters",
    "description": "A pipeline for spatialomics 10x Xenium In Situ data.",
    "type": "object",
    "$defs": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["input", "outdir"],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "schema": "assets/schema_input.json",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "description": "Path to comma-separated file containing information about the Xenium experiment. (eg; meta,path-to-xenium-bundle,path-to-morphology.ome.tif))",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row.",
                    "fa_icon": "fas fa-file-csv"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "segmentation": {
                    "type": "string",
                    "enum": ["cellpose", "xeniumranger", "baysor", "proseg", "segger"],
                    "description": "Segmentation method to run"
                },
                "gene_panel": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Path to gene panel JSON file to use for relabeling transcripts with the correct gene."
                },
                "qupath_polygons": {
                    "type": "string",
                    "description": "Polygon segmentation results in GeoJSON format from QuPath"
                },
                "alignment_csv": {
                    "type": "string",
                    "description": "Image alignment file containing similarity transform matrix (e.g., the _imagealignment.csv file exported from Xenium Explorer)",
                    "format": "file-path"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                }
            }
        },
        "segmentation_options": {
            "title": "Segmentation options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "image_based": {
                    "type": "boolean",
                    "default": true,
                    "description": "Wether to run image-based segmentation methods"
                },
                "coordinate_based": {
                    "type": "boolean",
                    "description": "Wether to run coordinate-based segmentation methods"
                },
                "generate_preview": {
                    "type": "boolean",
                    "description": "Wether to generate a preview of the dataset with the transcripts.csv.gz"
                },
                "segmentation_refinement": {
                    "type": "boolean",
                    "description": "Wether to run refinement on the image-based segmentation methods. Runs coordinate-based methods after the initial image-based segmentation run"
                },
                "relabel_genes": {
                    "type": "boolean",
                    "description": "Wether to relabel genes with gene_panel.json file. True when gene_panel is provided"
                },
                "xeniumranger_only": {
                    "type": "boolean",
                    "description": "Wether to run vanilla xeniumranger workflow"
                },
                "nucleus_segmentation_only": {
                    "type": "boolean",
                    "description": "Wether to only run nucleus segmentation"
                },
                "expansion_distance": {
                    "type": "integer",
                    "default": 5,
                    "description": "Nuclei boundary expansion distance in Âµm. Default: 5 (Min: 0, Max: 15 if either boundary-stain or interior-stain are enabled and 100 if nucleus-expansion only)"
                },
                "dapi_filter": {
                    "type": "integer",
                    "default": 100,
                    "description": "Minimum intensity in photoelectrons (pe) to filter nuclei. Default: 100 (appropriate range of values is 0 to 99th percentile of image stack or 1000, whichever is larger)"
                },
                "interior_stain": {
                    "type": "boolean",
                    "default": true,
                    "description": "Specify the name of the interior stain to use or disable. Supported for cell segmentation staining workflow output bundles. Possible options are: \\\"18S\\\" (default) or \\\"disable\\\""
                },
                "boundary_stain": {
                    "type": "boolean",
                    "default": true,
                    "description": "Specify the name of the boundary stain to use or disable. Supported for cell segmentation staining workflow output bundles. Possible options are: \\\"ATP1A1/CD45/E-Cadherin\\\" (default) or \\\"disable\\\""
                },
                "sharpen_tiff": {
                    "type": "boolean",
                    "description": "Wether to enhance the morphology.ome.tif file"
                },
                "segger_accelerator": {
                    "type": "string",
                    "default": "cpu",
                    "description": "Device used for training (e.g., cuda for GPU or cpu)"
                },
                "segger_knn_method": {
                    "type": "string",
                    "default": "kd_tree",
                    "description": "Method for KNN computation (e.g., cuda for GPU-based computation)"
                },
                "cellpose_model": {
                    "type": "string",
                    "default": "nuclei",
                    "description": "Model to use for running or starting training (eg. cyto3)"
                },
                "format": {
                    "type": "string",
                    "default": "xenium",
                    "description": "Preset value for the proseg segmentation method"
                },
                "image_seg_methods": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": ["cellpose", "xeniumranger", "baysor"]
                    },
                    "description": "List of image-based segmentation methods"
                },
                "transcript_seg_methods": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": ["proseg", "segger", "baysor"]
                    },
                    "description": "List of transcript-based segmentation methods"
                },
                "segfree_methods": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": ["ficture", "baysor"]
                    },
                    "description": "List of segmentation-free methods"
                },
                "negative_control_regex": {
                    "type": "string",
                    "description": "Regex used to identify or match negative control samples in a dataset"
                },
                "features": {
                    "type": "string",
                    "description": "List of features to be passed to the ficture method"
                },
                "baysor_run_image": {
                    "type": "boolean",
                    "default": true,
                    "description": "Wether to run bayor with image/segmentation-mask"
                },
                "baysor_run_transcripts": {
                    "type": "boolean",
                    "description": "Wether to run baysor with transcripts.csv.gz"
                },
                "baysor_preview": {
                    "type": "boolean",
                    "description": "Wether to create a preview of the dataset with transcripts.csv.gz"
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "test_data_base": {
                    "type": "string",
                    "default": "https://raw.githubusercontent.com/nf-core/test-datasets/spatialxe",
                    "description": "Base path / URL for data used in the test profiles"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "monochromeLogs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs",
                    "hidden": true
                },
                "pipelines_testdata_base_path": {
                    "type": "string",
                    "default": "https://raw.githubusercontent.com/nf-core/test-datasets/",
                    "description": "Base URL or local path to location of pipeline test dataset files",
                    "hidden": true
                },
                "trace_report_suffix": {
                    "type": "string",
                    "fa_icon": "far calendar",
                    "description": "Suffix to add to the trace report filename. Default is the date and time in the format yyyy-MM-dd_HH-mm-ss",
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/$defs/input_output_options"
        },
        {
            "$ref": "#/$defs/segmentation_options"
        },
        {
            "$ref": "#/$defs/institutional_config_options"
        },
        {
            "$ref": "#/$defs/generic_options"
        }
    ]
}
